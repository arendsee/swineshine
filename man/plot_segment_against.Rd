% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tree.R
\name{plot_segment_against}
\alias{plot_segment_against}
\title{Make tree with branches colored by clade and names by some column}
\usage{
plot_segment_against(
  segment,
  colname,
  tre = NULL,
  f = NULL,
  subset_with = function(x) {     rep(TRUE, nrow(x@data)) },
  ggpalette = viridis::scale_color_viridis(discrete = TRUE),
  output_nexus_filename = NULL,
  ...
)
}
\arguments{
\item{segment}{string The name of a flu segment (e.g., H1, H3, M)}

\item{colname}{string Either a column in the tree data or a column that will
be created by the \code{f} function}

\item{tre}{optional treedata object. If this argument is not included, the
default tree for this segment will be loaded.}

\item{f}{function a function of the tree that will create the column \code{colname}}

\item{subset_with}{function of the tree that specifies which labels to include}

\item{ggpalette}{A color palette for the tip labels. This may be 1) the name
of a segment in the config color list, 2) a literal list of colors, 3) a
"gg" object storing a color scale.}

\item{output_nexus_filename}{filename if given, create a colored nexus file}

\item{...}{Additional argument passed to \code{load_segment_tree}}
}
\value{
gg tree object
}
\description{
Make tree with branches colored by clade and names by some column
}
\examples{
# Plot an H1 tree with branches colored by H1 clade and labels colored by
# PB2 clade. Do not write labels for strains with missing PB2 annotations.
tre <- load_segment_tree("H1")
plot_segment_against(
 "H1", "PB2", tre=tre,
 subset_with=function(x) !is.na(x@data$PB2),
 ggpalette = "PB2"
)

# You can filter out the most common TRIG strain, and just see where
# pandemic and TX98 appear:
plot_segment_against(
 "H1", "PB2", tre=tre,
 subset_with=function(x) { !is.na(x@data$PB2) & (x@data$PB2 != "TRIG") },
 ggpalette = c("red", "blue")
)
}
